{"version":3,"sources":["components/Blog.js","components/Button.js","components/LoginForm.js","components/BlogForm.js","components/Togglable.js","components/Notification.js","components/Footer.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","like","del","loggedInUser","blogStyle","paddingTop","paddingLeft","border","borderWidth","marginBottom","title","author","url","likes","id","user","blogUName","name","blogUsername","username","loggedinUName","loggedinUsername","likeBlog","event","preventDefault","useState","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","style","type","onClick","Button","handleClick","text","LoginForm","login","setUsername","password","setPassword","onSubmit","value","onChange","target","BlogForm","createBlog","setTitle","setAuthor","setUrl","Togglable","React","forwardRef","props","ref","useImperativeHandle","buttonLabel","children","Notification","message","className","Footer","color","fontStyle","fontSize","token","getAll","axios","get","then","response","data","create","newObject","a","config","headers","Authorization","post","update","updateUrl","put","setToken","newToken","delete","credentials","App","blogs","setBlogs","setUser","setMessage","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogFormRef","createRef","addBlog","blogObject","current","returnedBlog","concat","exception","console","log","blogid","map","deleteBlog","confirm","filter","handleLogin","loginService","setItem","stringify","handleLogout","removeItem","sort","b","key","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.200134bd.chunk.js","sourcesContent":["/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\n\nconst Blog = ({\n  blog, like, del, loggedInUser,\n}) => {\n  const blogStyle = {\n    paddingTop: 10,\n    paddingLeft: 2,\n    border: 'solid',\n    borderWidth: 1,\n    marginBottom: 5,\n  };\n\n  const { title } = blog;\n  const { author } = blog;\n  const { url } = blog;\n  let { likes } = blog;\n  const { id } = blog;\n  const { user } = blog;\n  // might have no user attached to blog\n  const blogUName = user.name;\n  const blogUsername = user.username;\n  const loggedinUName = loggedInUser.name;\n  const loggedinUsername = loggedInUser.username;\n\n  const likeBlog = (event) => {\n    likes += 1;\n    event.preventDefault();\n    like(\n      id,\n      {\n        title,\n        author,\n        url,\n        likes,\n      },\n    );\n  };\n\n  const deleteBlog = (event) => {\n    event.preventDefault();\n    del({\n      title,\n      author,\n      url,\n      likes,\n    },\n    id);\n  };\n\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  if (blogUName === loggedinUName && blogUsername === loggedinUsername) {\n    return (\n      <div style={blogStyle}>\n        <div style={hideWhenVisible}>\n          {blog.title}\n          {' '}\n          {blog.author}\n          <button type=\"submit\" onClick={toggleVisibility}>view</button>\n        </div>\n        <div style={showWhenVisible}>\n          {blog.title}\n          <button type=\"submit\" onClick={toggleVisibility}>hide</button>\n          <br />\n          {blog.url}\n          <br />\n          {'likes '}\n          {blog.likes}\n          <button type=\"submit\" onClick={likeBlog}>like</button>\n          <br />\n          {blog.author}\n          <br />\n          <button type=\"submit\" onClick={deleteBlog}>remove</button>\n          <br />\n        </div>\n      </div>\n    );\n  // eslint-disable-next-line no-else-return\n  } else {\n    return (\n      <div style={blogStyle}>\n        <div style={hideWhenVisible}>\n          {blog.title}\n          {' '}\n          {blog.author}\n          <button type=\"submit\" onClick={toggleVisibility}>view</button>\n        </div>\n        <div style={showWhenVisible}>\n          {blog.title}\n          <button type=\"submit\" onClick={toggleVisibility}>hide</button>\n          <br />\n          {blog.url}\n          <br />\n          {'likes '}\n          {blog.likes}\n          <button type=\"submit\" onClick={likeBlog}>like</button>\n          <br />\n          {blog.author}\n          <br />\n        </div>\n      </div>\n    );\n  }\n};\n\nexport default Blog;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ handleClick, text }) => (\n  <button onClick={handleClick} type=\"submit\">\n    {text}\n  </button>\n);\n\nButton.propTypes = {\n  handleClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\n// The app state has fields for username and password to store the data from the form.\n// The form fields have event handlers,\n// which synchronize changes in the field to the state of the App component.\n// The event handlers are simple: An object is given to them as a parameter,\n// and they destructure the field target from the object\n// and save its value to the state.\n\nconst LoginForm = ({\n  login,\n// eslint-disable-next-line arrow-body-style\n}) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleUsernameChange = (event) => {\n    setUsername(event.target.value);\n  };\n  const handlePasswordChange = (event) => {\n    setPassword(event.target.value);\n  };\n\n  const handleLogin = (event) => {\n    event.preventDefault();\n    login(\n      username,\n      password,\n    );\n\n    setUsername('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h2>Login</h2>\n\n      <form onSubmit={handleLogin}>\n        <div>\n          username\n          <input\n            value={username}\n            onChange={handleUsernameChange}\n          />\n        </div>\n        <div>\n          password\n          <input\n            type=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n          />\n        </div>\n        <button type=\"submit\">login</button>\n      </form>\n    </div>\n  );\n};\n\nLoginForm.propTypes = {\n  login: PropTypes.func.isRequired,\n};\n\nexport default LoginForm;\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst BlogForm = ({\n  createBlog,\n// eslint-disable-next-line arrow-body-style\n}) => {\n  const [title, setTitle] = useState('');\n  const [author, setAuthor] = useState('');\n  const [url, setUrl] = useState('');\n\n  const handleTitleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const handleAuthorChange = (event) => {\n    setAuthor(event.target.value);\n  };\n  const handleUrlChange = (event) => {\n    setUrl(event.target.value);\n  };\n\n  const addBlog = (event) => {\n    event.preventDefault();\n    createBlog({\n      title,\n      author,\n      url,\n      likes: 0,\n    });\n\n    setTitle('');\n    setAuthor('');\n    setUrl('');\n  };\n\n  return (\n    <form onSubmit={addBlog}>\n      <div>\n        Title\n        <input\n          value={title}\n          onChange={handleTitleChange}\n        />\n      </div>\n      <div>\n        Author\n        <input\n          value={author}\n          onChange={handleAuthorChange}\n        />\n      </div>\n      <div>\n        URL\n        <input\n          value={url}\n          onChange={handleUrlChange}\n        />\n      </div>\n      <button type=\"submit\">post</button>\n    </form>\n  );\n};\n\nBlogForm.propTypes = {\n  createBlog: PropTypes.func.isRequired,\n};\n\nexport default BlogForm;\n","/* eslint-disable react/jsx-filename-extension */\n// display property is none if we do not want the component to be displayed:\n\n//  function that creates the component is wrapped inside of a forwardRef function call.\n// This way the component can access the ref that is assigned to it.\n\n// The component uses the useImperativeHandle hook to make its toggleVisibility function\n// available outside of the component.\n\n// useImperativeHandle function is a React hook,\n// that is used for defining functions in a component\n// which can be invoked from outside of the component.\nimport React, { useState, useImperativeHandle } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false);\n\n  const hideWhenVisible = { display: visible ? 'none' : '' };\n  const showWhenVisible = { display: visible ? '' : 'none' };\n\n  const toggleVisibility = () => {\n    setVisible(!visible);\n  };\n\n  // eslint-disable-next-line arrow-body-style\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility,\n    };\n  });\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <button type=\"submit\" onClick={toggleVisibility}>{props.buttonLabel}</button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <button type=\"submit\" onClick={toggleVisibility}>cancel</button>\n      </div>\n    </div>\n  );\n});\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired,\n  // eslint-disable-next-line react/forbid-prop-types\n  children: PropTypes.object.isRequired,\n};\n\nexport default Togglable;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Testing</em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import axios from 'axios';\n\nconst baseUrl = '/api/blogs';\n\nlet token = null;\n\n// changes value of token\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`;\n};\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\n// sets token to authorization header\n// header is given to axios as the third parameter of the post method\nconst create = async (newObject) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n\n  const response = await axios.post(baseUrl, newObject, config);\n  return response.data;\n};\n\n// delete  would be mix of create and update\n// delete a reserved word in JavaScript.\nconst del = async (id) => {\n  const config = {\n    headers: { Authorization: token },\n  };\n  const updateUrl = `${baseUrl}/${id}`;\n  const response = await axios.delete(updateUrl, config);\n  return response.data;\n};\n\nconst update = (id, newObject) => {\n  const updateUrl = `${baseUrl}/${id}`;\n  const request = axios.put(updateUrl, newObject);\n  return request.then((response) => response.data);\n};\n\nexport default {\n  getAll, create, update, setToken, del,\n};\n","import axios from 'axios';\n\nconst baseUrl = '/api/login';\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials);\n  return response.data;\n};\n\nexport default { login };\n","/* eslint-disable react/jsx-filename-extension */\nimport React, { useState, useEffect } from 'react';\nimport Blog from './components/Blog';\nimport Button from './components/Button';\nimport LoginForm from './components/LoginForm';\nimport BlogForm from './components/BlogForm';\nimport Togglable from './components/Togglable';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport blogService from './services/blogs';\nimport loginService from './services/login';\n\nconst App = () => {\n  // const [loginVisible, setLoginVisible] = useState(false);\n  const [blogs, setBlogs] = useState([]);\n  const [user, setUser] = useState(null);\n  const [message, setMessage] = useState('some error happened...');\n\n  // effect hooks\n  useEffect(() => {\n    // eslint-disable-next-line no-shadow\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n  }, []);\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      setUser(user);\n      blogService.setToken(user.token);\n    }\n  }, []);\n\n  // ref offers a reference to the component.\n  // The visibility is controlled with the visible variable inside of the Togglable component.\n  const blogFormRef = React.createRef();\n\n  const sortIdAsc = () => {\n    blogService.getAll().then((blogs) => setBlogs(blogs));\n    // no id, could add date field\n    // setBlogs(blogs.sort((a, b) => a.id - b.id).map((blog) => (blog)));\n  };\n\n  const sortLikesAsc = () => {\n    setBlogs(blogs.sort((a, b) => a.likes - b.likes).map((blog) => (blog)));\n  };\n\n  const sortLikesDesc = () => {\n    setBlogs(blogs.sort((a, b) => b.likes - a.likes).map((blog) => (blog)));\n  };\n\n  const addBlog = (blogObject) => {\n    try {\n      blogFormRef.current.toggleVisibility();\n      blogService\n        .create(blogObject)\n        .then((returnedBlog) => {\n          setBlogs(blogs.concat(returnedBlog));\n          // then(response => {\n          // setNotes(notes.concat(response.data))\n          setMessage(`a new blog ${blogObject.title} by  ${blogObject.author} added`);\n        });\n    } catch (exception) {\n      console.log('failed');\n      setMessage('Failed to post');\n      // setTimeout(() => {\n      //   setErrorMessage(null);\n      // }, 5000);\n    }\n    // only possible to update likes not other fields without changing the backend\n    /* let duplicate = false;\n    for (let index = 0; index < blogs.length; index += 1) {\n      const blog = blogs[index];\n      if (blog.title === blogObject.title && blog.author === blogObject.author) {\n        duplicate = true;\n        console.log(\"duplicate\")\n        console.log(blog.title)\n        console.log(blogObject.title)\n        try {\n          if (window.confirm(`${blogObject.title} by is already added to bloglist, replace the old url with the new one?`)) {\n            console.log(\"replace details confirmed\")\n            console.log(blogObject)\n            console.log(blog.id)\n            blogService\n              .update(blog.id, blogObject)\n              .then((returnedBlog) => {\n                setBlogs(blogs.map((blog) => (blog.id !== blogObject.id ? blog : returnedBlog)));\n                setMessage(`updated ${blogObject.title} by  ${blogObject.author}`);\n                console.log(\"retuned blog\")\n                console.log(returnedBlog)\n              });\n          }\n        } catch (exception) {\n          console.log('failed');\n          setMessage('Failed to replace');\n          // setTimeout(() => {\n          //   setErrorMessage(null);\n          // }, 5000);\n        }\n      }\n    }\n    if (duplicate !== true) {\n      console.log(\"not duplicate\")\n      try {\n        blogFormRef.current.toggleVisibility();\n        blogService\n          .create(blogObject)\n          .then((returnedBlog) => {\n            setBlogs(blogs.concat(returnedBlog));\n            // then(response => {\n            // setNotes(notes.concat(response.data))\n            setMessage(`a new blog ${blogObject.title} by  ${blogObject.author} added`);\n          });\n      } catch (exception) {\n        console.log('failed');\n        setMessage('Failed to post');\n        // setTimeout(() => {\n        //   setErrorMessage(null);\n        // }, 5000);\n      }\n    } */\n  };\n\n  const likeBlog = (blogid, blogObject) => {\n    try {\n      blogService\n        .update(blogid, blogObject)\n        .then((returnedBlog) => {\n          setBlogs(blogs.map((blog) => (blog.id !== blogid ? blog : returnedBlog)));\n          setMessage(`liked ${blogObject.title} by  ${blogObject.author}`);\n        });\n    } catch (exception) {\n      console.log('failed');\n      setMessage('Failed to like');\n      // setTimeout(() => {\n      //   setErrorMessage(null);\n      // }, 5000);\n    }\n  };\n\n  const deleteBlog = (blogObject, blogid) => {\n    try {\n      // need ` not '\n      if (window.confirm(`Remove blog ${blogObject.title} by ${blogObject.author}`)) {\n        blogService\n          .del(blogid)\n          .then(() => {\n            setBlogs(blogs.filter(((blog) => (blog.id !== blogid))));\n            setMessage(`deleted ${blogObject.title} by  ${blogObject.author}`);\n          });\n      }\n    } catch (exception) {\n      console.log('failed');\n      setMessage('Failed to delete');\n      // setTimeout(() => {\n      //   setErrorMessage(null);\n      // }, 5000);\n    }\n  };\n\n  const handleLogin = async (username, password) => {\n    try {\n      const user = await loginService.login({\n        username, password,\n      });\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user),\n      );\n      blogService.setToken(user.token);\n      setUser(user);\n      setMessage('logged in');\n    } catch (exception) {\n      console.log('failed');\n      setMessage('Wrong username or password');\n      // setTimeout(() => {\n      //   setErrorMessage(null);\n      // }, 5000);\n    }\n  };\n\n  const handleLogout = async (event) => {\n    event.preventDefault();\n    try {\n      window.localStorage.removeItem('loggedBlogappUser');\n      blogService.setToken('');\n      setUser(null);\n      console.log('logged out');\n    } catch (exception) {\n      console.log('failed to log out');\n      // setErrorMessage('Wrong credentials');\n      // setTimeout(() => {\n      //   setErrorMessage(null);\n      // }, 5000);\n    }\n  };\n\n  // display property is none if we do not want the component to be displayed:\n  const loginForm = () => (\n    <Togglable buttonLabel=\"login\">\n      <LoginForm\n        login={handleLogin}\n      />\n    </Togglable>\n  );\n\n  const addBlogForm = () => (\n    <Togglable buttonLabel=\"create new blog\" ref={blogFormRef}>\n      <BlogForm\n        createBlog={addBlog}\n      />\n    </Togglable>\n  );\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Log in to application</h2>\n        <Notification message={message} />\n        {loginForm()}\n        <Footer />\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2>blogs</h2>\n      <Notification message={message} />\n      <p>\n        {user.name}\n        {' logged in '}\n        <Button\n          handleClick={handleLogout}\n          text=\"logout\"\n        />\n      </p>\n      {addBlogForm()}\n      <Button\n        handleClick={sortIdAsc}\n        text=\"sort by id asc\"\n      />\n      <Button\n        handleClick={sortLikesAsc}\n        text=\"sort by likes asc\"\n      />\n      <Button\n        handleClick={sortLikesDesc}\n        text=\"sort by likes desc\"\n      />\n      {blogs.map((blog) => <Blog key={blog.id} blog={blog} like={likeBlog} del={deleteBlog} loggedInUser={user} />)}\n      <br />\n      <Footer />\n      <br />\n    </div>\n  );\n};\n\nexport default App;\n","/* eslint-disable react/jsx-filename-extension */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}